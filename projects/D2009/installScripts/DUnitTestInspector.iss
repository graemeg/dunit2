; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define PluginName "DUnitTestInspector"
#define VersionNumber "0.3"
#define MyAppPublisher "DUnit project group"

#define PluginIDEDescription "DUnit Test Inspector"
#define PluginFileName "DUnitTestInspector.bpl"
#define OTAFileName "OTAUtils.bpl"
#define WatchFolder "{userappdata}\DUnitTestInspector"

#define D2007Folder "{commondocs}\RAD Studio\5.0\Bpl"
#define D2007PluginPath "{commondocs}\RAD Studio\5.0\Bpl\DUnitTestInspector.bpl"
#define D2007KnownPackageKey "Software\Borland\BDS\5.0\Known Packages"
#define D2007DisabledPackageKey "Software\Borland\BDS\5.0\Disabled Packages"

#define D2009Folder "{commondocs}\RAD Studio\6.0\Bpl"
#define D2009PluginPath "{commondocs}\RAD Studio\6.0\Bpl\DUnitTestInspector.bpl"
#define D2009KnownPackageKey "Software\CodeGear\BDS\6.0\Known Packages"
#define D2009DisabledPackageKey "Software\CodeGear\BDS\6.0\Disabled Packages"

#define D2010Folder "{commondocs}\RAD Studio\7.0\Bpl"
#define D2010PluginPath "{commondocs}\RAD Studio\7.0\Bpl\DUnitTestInspector.bpl"
#define D2010KnownPackageKey "Software\CodeGear\BDS\7.0\Known Packages"
#define D2010DisabledPackageKey "Software\CodeGear\BDS\7.0\Disabled Packages"

[Setup]
AppName={#PluginName}
AppVerName={#PluginName} {#VersionNumber}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\{#PluginName}
DefaultGroupName={#PluginName}
OutputBaseFilename={#PluginName}Setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: english; MessagesFile: compiler:Default.isl

[Types]
Name: D2007; Description: Delphi 2007 installation
Name: D2009; Description: Delphi 2009 installation
Name: D2010; Description: Delphi 2010 installation

[Components]
Name: D2007; Description: Delphi 2007; Types: D2007
Name: D2009; Description: Delphi 2009; Types: D2009
Name: D2010; Description: Delphi 2010; Types: D2010

[Files]
Source: ..\_bin\{#PluginFileName}; DestDir: {#D2007Folder}; Flags: ignoreversion; AfterInstall: AddToDelphi2007KnownPackages; Components: D2007
Source: ..\_bin\{#OTAFileName}; DestDir: {#D2007Folder}; Flags: ignoreversion; Components: D2007

Source: ..\_bin\{#PluginFileName}; DestDir: {#D2009Folder}; Flags: ignoreversion; AfterInstall: AddToDelphi2009KnownPackages; Components: D2009
Source: ..\_bin\{#OTAFileName}; DestDir: {#D2009Folder}; Flags: ignoreversion; Components: D2009

Source: ..\_bin\{#PluginFileName}; DestDir: {#D2010Folder}; Flags: ignoreversion; AfterInstall: AddToDelphi2010KnownPackages; Components: D2010
Source: ..\_bin\{#OTAFileName}; DestDir: {#D2010Folder}; Flags: ignoreversion; Components: D2010
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Registry]
Root: HKCU; Subkey: Software\{#PluginName}; ValueType: expandsz; ValueName: WatchFile; ValueData: {#WatchFolder}\watchFile; Flags: uninsdeletekey; AfterInstall: CreateWatchFolder

[Icons]
Name: {group}\{cm:UninstallProgram,{#PluginName}}; Filename: {uninstallexe}

[Code]

procedure AddKnownPackageToRegistry(AKnownPackageKey, ADisabledPackageKey, APackageFilePath, APackageDescription: string);
begin
  RegWriteStringValue(HKEY_CURRENT_USER, AKnownPackageKey, APackageFilePath, APackageDescription);
  RegDeleteValue(HKEY_CURRENT_USER, ADisabledPackageKey, APackageFilePath);
end;

procedure DeleteKnownPackageFromRegistry(AKnownPackageKey, ADisabledPackageKey, APackageFilePath: string);
begin
  RegDeleteValue(HKEY_CURRENT_USER, AKnownPackageKey, APackageFilePath);
  RegDeleteValue(HKEY_CURRENT_USER, ADisabledPackageKey, APackageFilePath);
end;

procedure AddToDelphi2007KnownPackages;
begin
   AddKnownPackageToRegistry('{#D2007KnownPackageKey}', '{#D2007DisabledPackageKey}',
     ExpandConstant('{#D2007PluginPath}'), '{#PluginIDEDescription}');
end;

procedure DeleteFromDelphi2007KnownPackages;
begin
  DeleteKnownPackageFromRegistry('{#D2007KnownPackageKey}', '{#D2007DisabledPackageKey}',
    ExpandConstant('{#D2007PluginPath}'));
end;


procedure AddToDelphi2009KnownPackages;
begin
   AddKnownPackageToRegistry('{#D2009KnownPackageKey}', '{#D2009DisabledPackageKey}',
     ExpandConstant('{#D2009PluginPath}'), '{#PluginIDEDescription}');
end;

procedure DeleteFromDelphi2009KnownPackages;
begin
  DeleteKnownPackageFromRegistry('{#D2009KnownPackageKey}', '{#D2009DisabledPackageKey}',
    ExpandConstant('{#D2009PluginPath}'));
end;

procedure AddToDelphi2010KnownPackages;
begin
   AddKnownPackageToRegistry('{#D2010KnownPackageKey}', '{#D2010DisabledPackageKey}',
     ExpandConstant('{#D2010PluginPath}'), '{#PluginIDEDescription}');
end;

procedure DeleteFromDelphi2010KnownPackages;
begin
  DeleteKnownPackageFromRegistry('{#D2010KnownPackageKey}', '{#D2010DisabledPackageKey}',
    ExpandConstant('{#D2010PluginPath}'));
end;

procedure CreateWatchFolder();
begin
  ForceDirectories(ExpandConstant('{#WatchFolder}'))
end;

procedure DeleteWatchFolder();
begin
  DelTree(ExpandConstant('{#WatchFolder}'), true, true, true);
end;

procedure DeinitializeUninstall();
begin
  DeleteFromDelphi2007KnownPackages;
  DeleteFromDelphi2009KnownPackages;
  DeleteFromDelphi2010KnownPackages;
  DeleteWatchFolder;
end;
